[{"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\index.js":"1","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\App.js":"2","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\pages\\Home.js":"3","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\pages\\project\\ProjectCreate.js":"4","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\card\\HeaderComponent.js":"5","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\forms\\ProjectCreateForm.js":"6","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\functions\\project_function.js":"7","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\card\\ProjectCard.js":"8","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\card\\Jumbotron.js":"9"},{"size":478,"mtime":1611434305902,"results":"10","hashOfConfig":"11"},{"size":410,"mtime":1611474457980,"results":"12","hashOfConfig":"11"},{"size":1938,"mtime":1611482925142,"results":"13","hashOfConfig":"11"},{"size":1500,"mtime":1611477900444,"results":"14","hashOfConfig":"11"},{"size":691,"mtime":1611474847185,"results":"15","hashOfConfig":"11"},{"size":1316,"mtime":1611477905831,"results":"16","hashOfConfig":"11"},{"size":251,"mtime":1611479612359,"results":"17","hashOfConfig":"11"},{"size":1027,"mtime":1611491798758,"results":"18","hashOfConfig":"11"},{"size":253,"mtime":1611482752154,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2fj3ac",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\index.js",[],["41","42"],"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\App.js",[],"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\pages\\Home.js",["43","44"],"import React,{useEffect , useState} from 'react'\r\nimport {Layout , Menu} from 'antd' \r\nimport 'antd/dist/antd.css'\r\nimport {Link} from 'react-router-dom'\r\nimport Jumbotron from '../components/card/Jumbotron'\r\n\r\n//Local imports\r\nimport HeaderComponent from '../components/card/HeaderComponent'\r\nimport {getProjects} from '../functions/project_function'\r\nimport ProductCard from '../components/card/ProjectCard'\r\n\r\n\r\nconst {Content , Footer} = Layout\r\n\r\n\r\n\r\nconst Home = () =>{\r\n\r\n    const [projects , setProjects] = useState([])\r\n    const [loading , setLoading] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        loadAllProjects();\r\n    },[])\r\n\r\n    const loadAllProjects = () =>{\r\n        setLoading(true)\r\n        getProjects().then((res)=>{\r\n            setProjects(res.data)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Layout>\r\n            \r\n            <HeaderComponent />\r\n            <Content style={{\"padding\":\"25px 50px\",\"minHeight\":\"550px\"}}>\r\n                \r\n                <div className=\"jumbotron text-danger h1 font-weight-bold text-center\">\r\n                    <Jumbotron text={[\"Issue Tracker\",\"Bug Tracker\"]} />\r\n                </div>\r\n\r\n                {loading ? <h4>Loading...</h4> : <h4><Jumbotron text = {[\"All Projects\" , \"Click on View tab to add issue\"]} /></h4>}\r\n                \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {projects.map((project)=>(\r\n                            <div key={project._id} className=\"col-md-4\">                    \r\n                                <ProductCard project={project} />\r\n                            </div>))}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </Content>\r\n            <Footer style={{\"textAlign\":\"center\"}}>\r\n                <p>@Made with Love</p>\r\n            </Footer>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\pages\\project\\ProjectCreate.js",["45"],"import React , { useState, useEffect } from 'react'\r\nimport HeaderComponent from '../../components/card/HeaderComponent'\r\nimport ProjectCreateForm from '../../components/forms/ProjectCreateForm'\r\nimport {create} from '../../functions/project_function'\r\n\r\nconst initialState = {\r\n    name: \"Apple\",\r\n    description: \"This is the best Apple product\",\r\n    author: \"Steve\",\r\n}\r\n\r\n\r\nconst ProjectCreate = () =>{\r\n    const [values, setValues] = useState(initialState);\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        create(values)\r\n          .then((res) => {\r\n            console.log(res);\r\n            window.alert(`\"${res.data.name}\" is created`);\r\n            window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            // if (err.response.status === 400) toast.error(err.response.data);\r\n            \r\n          });\r\n      };\r\n\r\n      const handleChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n        // console.log(e.target.name, \" ----- \", e.target.value);\r\n      };\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <HeaderComponent/>\r\n            <br />\r\n            <ProjectCreateForm \r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            values={values}\r\n            />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProjectCreate;\r\n\r\n /*-----------------------------------------------------------------*/\r\n    \r\n  \r\n\r\n\r\n","E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\card\\HeaderComponent.js",[],"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\forms\\ProjectCreateForm.js",[],"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\functions\\project_function.js",[],"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\card\\ProjectCard.js",["46","47"],"E:\\PRACTISE WEB_D\\MERN\\Issue_Tracker\\client\\src\\components\\card\\Jumbotron.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":18,"nodeType":"54","messageId":"55","endLine":2,"endColumn":22},{"ruleId":"52","severity":1,"message":"56","line":4,"column":9,"nodeType":"54","messageId":"55","endLine":4,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":1,"column":28,"nodeType":"54","messageId":"55","endLine":1,"endColumn":37},{"ruleId":"52","severity":1,"message":"58","line":10,"column":13,"nodeType":"54","messageId":"55","endLine":10,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":18,"column":11,"nodeType":"61","endLine":22,"endColumn":13},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'image' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]